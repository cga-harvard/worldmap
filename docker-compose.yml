version: '2'
services:

  postgres:
    build: './docker/postgres'

  elasticsearch:
   image: elasticsearch

  rabbitmq:
     image: rabbitmq

  django:
    build: .
    links:
      - postgres
      - elasticsearch
      - rabbitmq
    volumes:
      - /usr/src/app/worldmap/static/worldmap_client/script
    command: django-admin.py runserver 0.0.0.0:8000 --settings=worldmap.settings
    env_file:
      - ./docker/env/production/django.env

  celery:
    build: .
    links:
      - rabbitmq
      - postgres
      - elasticsearch
    command: celery worker --app=worldmap.celeryapp:app -B -l INFO
    env_file:
      - ./docker/env/production/django.env

  geoserver:
    image: geonode/geoserver:alias
    links:
      - postgres
    ports:
      - "8080"
    volumes_from:
      - data_dir_conf
    env_file:
      - ./docker/env/production/geoserver.env

  worldmap:
    image: geonode/nginx:geoserver
    links:
      - django
      - geoserver
    ports:
      - "80:80"

  data_dir_conf:
    image: geonode/geoserver_data:2.9.x-oauth2
    container_name: geoserver_data_dir
    command: /bin/true
    volumes:
      - /geoserver_data/data

volumes:

  geoserver_data_dir:
